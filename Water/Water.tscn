[gd_scene load_steps=4 format=2]

[sub_resource type="Shader" id=4]
code = "shader_type spatial;

uniform vec4 out_color : hint_color = vec4(0.0, 0.2, 1.0, 1.0);

float geerateOffset(float x, float z, float val1, float val2, float time){
	float amount = 0.8;
	float speed = 1.0;
	
	float radiansX = ((mod(x + z * x *val1, amount) / amount) + (time * speed) * mod(x * 0.8 + z, 1.5)) * 2.0 * 3.14;
	
}

vec3 applyDistortion(vec3 vertex, float time){
	float xd = generateOffset(vertex.x, vertex.z, 0.2, 0.1, time);
	float yd = generateOffset(vertex.x, vertex.z, 0.1, 0.3, time);
	float zd = generateOffset(vertex.x, vertex.z, 0.15, 0.2, time);
	return vertex + vec3(xd, yd, zd);
}

void vertex(){
	VERTEX = applyDistortion(VERTEX, TIME * 0.1);
}

void fragment(){
	
	NORMAL = normalize(cross(dFdx(VERTEX), dFdy(VERTEX)));
	METALLIC = 0.6;
	SPECULAR = 0.5;
	ROUGHNESS = 0.2;
	ALBEDO = out_color.xyz;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 4 )

[sub_resource type="PlaneMesh" id=3]
material = SubResource( 2 )
subdivide_width = 50
subdivide_depth = 50

[node name="Water" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
transform = Transform( 50, 0, 0, 0, 1, 0, 0, 0, 50, 0, 4.53611, 0 )
mesh = SubResource( 3 )
material/0 = null
